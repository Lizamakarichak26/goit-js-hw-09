{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAaC,SAASC,cAAc,SACpCC,EAAYF,SAASC,cAAc,uBACnCE,EAAWH,SAASC,cAAc,sBAClCG,EAAaJ,SAASC,cAAc,wBAkC1CF,EAAWM,iBAAiB,UAjCHC,IACvBA,EAAIC,iBACJ,IAAIC,EAAkB,EAClBC,EAAaC,OAAON,EAAWO,OAC/BC,EAAYF,OAAOR,EAAUS,OAC7BE,EAAWH,OAAOP,EAASQ,OAC7B,KAAIC,EAAU,GAAGC,EAAS,GAAGJ,EAAW,GAG1C,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAYK,IAC9BN,GAAmB,EACnBI,GAAaC,EACVE,EAAcP,EAAiBI,GAC/BI,MAAK,EAACC,gBAAEA,EAAeC,UAAEA,MACvBC,EAAAtB,GAASuB,OAAOC,QAAQ,sBAAsBJ,QAAsBC,MAAc,IAEpFI,OAAM,EAACL,gBAAEA,EAAeC,UAAEA,MACzBC,EAAAtB,GAASuB,OAAOG,QAAQ,qBAAqBN,QAAsBC,MAAc,IAGvF,SAASH,EAAcE,EAAiBC,GACtC,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACHF,EAAQ,C,gBAACR,E,UAAiBC,IAE3BQ,EAAO,C,gBAACT,E,UAAiBC,GAAW,GAEnCA,EAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst submitElem = document.querySelector('.form');\nconst delayElem = document.querySelector('input[name=\"delay\"]');\nconst stepElem = document.querySelector('input[name=\"step\"]');\nconst amountElem = document.querySelector('input[name=\"amount\"]');\nconst onSubmitHandler = (evt) => {\n  evt.preventDefault();\n  let numberOfPromise = 0;\n  let amountDate = Number(amountElem.value);\n  let delayDate = Number(delayElem.value);\n  let stepDate = Number(stepElem.value);\n    if (delayDate<0||stepDate<0||amountDate<0) {\n    return\n    }\n  for (let i = 0; i < amountDate; i++) {\n    numberOfPromise += 1;\n    delayDate += stepDate;\n       createPromise(numberOfPromise, delayDate)\n      .then(({ numberOfPromise, delayDate }) => {\n         Notiflix.Notify.success(` Fulfilled promise ${numberOfPromise} in ${delayDate}ms`);\n      })\n      .catch(({ numberOfPromise, delayDate }) => {\n        Notiflix.Notify.failure(` Rejected promise ${numberOfPromise} in ${delayDate}ms`);\n      });\n  };\n  function createPromise(numberOfPromise, delayDate) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n         resolve({numberOfPromise, delayDate})\n      } else {\n        reject({numberOfPromise, delayDate})\n      }\n      }, delayDate)\n    })\n  }\n}\nsubmitElem.addEventListener('submit', onSubmitHandler);\n\n\n\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$submitElem","document","querySelector","$47d4ff9957288465$var$delayElem","$47d4ff9957288465$var$stepElem","$47d4ff9957288465$var$amountElem","addEventListener","evt","preventDefault","numberOfPromise1","amountDate","Number","value","delayDate1","stepDate","i","createPromise","then","numberOfPromise","delayDate","$parcel$interopDefault","Notify","success","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.3b3e0d97.js.map"}